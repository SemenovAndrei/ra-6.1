{"version":3,"sources":["components/Clock/ClockFace/ClockFace.jsx","components/Clock/Arrows/Arrows.jsx","components/Clock/Clock.jsx","components/Form/checkValid.js","components/Form/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["deg","coordsY","Math","sin","PI","Circle","styled","div","Center","SmallCenter","Number","props","x","y","numbers","i","push","cos","ClockFace","map","o","children","ArrowSeconds","attrs","style","transform","ArrowMinutes","ArrowsHours","timeToDegree","time","Arrows","useState","Date","setTime","seconds","getSeconds","getMilliseconds","minutes","getMinutes","hours","getUTCHours","gmt","useEffect","timeout","setTimeout","clearTimeout","defaultProps","ClockElement","Button","button","Title","h3","Clock","title","zone","id","onClick","event","onDelete","target","checkValid","obj","value","borderColor","removeAttribute","FormElement","form","Input","input","Form","onChange","name","test","onSubmit","preventDefault","ClocksContainer","App","setForm","clocks","setClocks","deleteClock","filter","className","prev","nanoid","clock","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ee5560d.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst coordsX = (deg) => Math.cos((-90 + deg) * (Math.PI / 180)) * 85\nconst coordsY = (deg) => Math.sin((-90 + deg) * (Math.PI / 180)) * 85\n\nconst Circle = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 210px;\n  height: 210px;\n  border: 5px solid #000000;\n  border-radius: 50%;\n`\nconst Center = styled.div`\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  z-index: 1000;\n  background-color: #000;\n  border-radius: 50%;\n`\n\nconst SmallCenter = styled(Center)`\n  width: 2px;\n  height: 2px;\n  background-color: #ff0000;\n`\n\nconst Number = styled.div`\n  position: absolute;\n  left: calc(50% - 15px);\n  top: calc(50% - 15px);\n  width: 30px;\n  height: 30px;\n  font-weight: bold;\n  text-align: center;\n  transform: translate(${(props) => props.x}px, ${(props) => props.y}px);\n`\n\nconst numbers = []\n\nfor (let i = 1; i <= 12; i++) {\n  numbers.push(\n    <Number key={i} x={coordsX(30 * i)} y={coordsY(30 * i)}>\n      {i}\n    </Number>\n  )\n}\n\nexport default function ClockFace(props) {\n  return (\n    <Circle>\n      {numbers.map((o) => o)}\n      <Center></Center>\n      <SmallCenter></SmallCenter>\n      {props.children}\n    </Circle>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst ArrowSeconds = styled.div.attrs((props) => ({\n  style: {\n    transform: `translateX(0) translateY(-50%) rotate(${props.deg}deg)`,\n  },\n}))`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n\n  width: 75px;\n  height: 2px;\n  background-color: red;\n  border-radius: 1px;\n  transform-origin: left;\n`\n\nconst ArrowMinutes = styled(ArrowSeconds)`\n  height: 4px;\n  background-color: #000000;\n  border-radius: 2px;\n`\n\nconst ArrowsHours = styled(ArrowMinutes)`\n  width: 50px;\n`\n\nconst timeToDegree = (time) => time * 6 - 90\n\nfunction Arrows(props) {\n  const [time, setTime] = useState(new Date())\n\n  const seconds = time.getSeconds() + time.getMilliseconds() / 1000\n  const minutes = time.getMinutes() + time.getSeconds() / 60\n  const hours = time.getUTCHours() + +props.gmt + minutes / 60\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setTime(() => new Date()), 1000 / 60)\n    return () => {\n      clearTimeout(timeout)\n    }\n  })\n\n  return (\n    <div>\n      <ArrowsHours deg={timeToDegree(hours) * 5}></ArrowsHours>\n      <ArrowMinutes deg={timeToDegree(minutes)}></ArrowMinutes>\n      <ArrowSeconds deg={timeToDegree(seconds)}></ArrowSeconds>\n    </div>\n  )\n}\n\nArrows.defaultProps = {\n  gmt: '3',\n}\n\nArrows.propTypes = {\n  gmt: PropTypes.string.isRequired,\n}\n\nexport default Arrows\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport ClockFace from './ClockFace/ClockFace'\nimport Arrows from './Arrows/Arrows'\n\nconst ClockElement = styled.div`\n  position: relative;\n  margin: 30px;\n`\n\nconst Button = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 0;\n  padding: 5px;\n  border-style: none;\n  background-color: transparent;\n  cursor: pointer;\n`\nconst Title = styled.h3`\n  margin: 0;\n  font-weight: bold;\n`\n\nfunction Clock(props) {\n  const onDelete = (event) => {\n    props.onDelete(event.target.id)\n  }\n  return (\n    <ClockElement>\n      <Title>{props.title}</Title>\n      <ClockFace>\n        <Arrows gmt={props.zone}></Arrows>\n      </ClockFace>\n      <Button id={props.id} onClick={onDelete}>\n        X\n      </Button>\n    </ClockElement>\n  )\n}\n\nClock.defaultProps = {\n  title: 'Москва',\n  zone: '3',\n  id: 'test',\n}\n\nClock.propTypes = {\n  title: PropTypes.string.isRequired,\n  zone: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n}\n\nexport default Clock\n","export function checkValid(obj) {\n  if (obj.value) {\n    return false\n  }\n\n  obj.style.borderColor = 'red'\n  setTimeout(() => obj.removeAttribute('style'), 1000)\n  return true\n}\nexport default checkValid\n","import React from 'react'\nimport styled from 'styled-components'\nimport checkValid from './checkValid'\nimport PropTypes from 'prop-types'\n\nconst FormElement = styled.form`\n  width: 500px;\n  margin-top: 50px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  margin-bottom: 50px;\n`\n\nconst Input = styled.input`\n  display: block;\n  height: 32px;\n  margin-top: 10px;\n  padding: 5px;\n`\nconst Button = styled.button`\n  height: 32px;\n  padding: 5px;\n  cursor: pointer;\n`\n\nfunction Form(props) {\n  const onSubmit = (event) => {\n    event.preventDefault()\n    if (checkValid(event.target[0]) || checkValid(event.target[1])) {\n      return\n    }\n    props.onSubmit()\n  }\n\n  const onChange = (event) => {\n    if (event.target.name === 'zone' && /\\D/.test(event.target.value)) {\n      return\n    }\n    props.onChange(event.target)\n  }\n\n  return (\n    <FormElement onSubmit={onSubmit}>\n      <label>\n        Название\n        <Input name=\"title\" onChange={onChange} value={props.title || props.name} />\n      </label>\n      <label>\n        Временная зона\n        <Input name=\"zone\" onChange={onChange} value={props.zone || props.name} />\n      </label>\n      <Button>Добавить</Button>\n    </FormElement>\n  )\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  zone: PropTypes.string,\n}\n\nexport default Form\n","import { nanoid } from 'nanoid'\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport './App.css'\nimport Clock from './components/Clock/Clock'\nimport Form from './components/Form/Form'\n\nconst ClocksContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nfunction App() {\n  const [form, setForm] = useState({\n    name: '',\n  })\n\n  const [clocks, setClocks] = useState([])\n\n  const addClock = () => {\n    setClocks((prev) => [\n      ...prev,\n      {\n        id: nanoid(),\n        title: form.title,\n        zone: form.zone,\n      },\n    ])\n\n    setForm(() => ({\n      name: '',\n    }))\n  }\n\n  const change = (target) => {\n    setForm({ ...form, [target.name]: target.value })\n  }\n\n  const deleteClock = (id) => {\n    setClocks(clocks.filter((o) => o.id !== id))\n  }\n\n  return (\n    <div className=\"App\">\n      <Form onSubmit={addClock} onChange={change} {...form} />\n      <ClocksContainer>\n        {clocks.map((clock) => (\n          <Clock {...clock} key={clock.id} id={clock.id} onDelete={deleteClock}></Clock>\n        ))}\n      </ClocksContainer>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}